1.Arithematic operators:

1.program:
package main
import "fmt"
func main(){
	var x, y = 67, 10

	fmt.Printf("x + y = %d\n", x+y)
	fmt.Printf("x - y = %d\n", x-y)
	fmt.Printf("x * y = %d\n", x*y)
	fmt.Printf("x / y = %d\n", x/y)
	fmt.Printf("x mod y = %d\n", x%y)
	x++
	fmt.Printf("x++ = %d\n", x)
	y--
	fmt.Printf("y-- = %d\n", y)
}
output:
x + y = 77
x - y = 57
x * y = 670
x / y = 6
x mod y = 7
x++ = 68
y-- = 9

2.program:
package main    
import "fmt"  
func main(){ 
   a:= 50
   b:= 20   
   result1:= a + b 
   fmt.Printf("Result of a + b = %d", result1)      
   result2:= a - b 
   fmt.Printf("\nResult of a - b = %d", result2)   
   result3:= a * b 
   fmt.Printf("\nResult of a * b = %d", result3) 
   result4:= a / b 
   fmt.Printf("\nResult of a / b = %d", result4)  
   result5:= a % b 
   fmt.Printf("\nResult of a %% b = %d", result5) 
} 
output:
Result of a + b = 70
Result of a - b = 30
Result of a * b = 1000
Result of a / b = 2
Result of a % b = 10

3.program:
package main
import "fmt"
func main(){
var a int=30
var b int=40
fmt.Println("Arithematic operators")
fmt.Println(a+b)
fmt.Println(a-b)
fmt.Println(a*b)
fmt.Println(a/b)
fmt.Println(a%b)
}
output:
Arithematic operators
70
-10
1200
0
30

2.Relational programs:
1.program:
package main    
import "fmt"   
func main() { 
   p:= 54
   q:= 22
      
   // ‘=='(Equal To) 
   result1:= p == q 
   fmt.Println(result1) 
      
   // ‘!='(Not Equal To) 
   result2:= p != q 
   fmt.Println(result2) 
      
   // ‘<‘(Less Than) 
   result3:= p < q 
   fmt.Println(result3) 
      
   // ‘>'(Greater Than) 
   result4:= p > q 
   fmt.Println(result4) 
      
   // ‘>='(Greater Than Equal To) 
   result5:= p >= q 
   fmt.Println(result5) 
      
   // ‘<='(Less Than Equal To) 
   result6:= p <= q 
   fmt.Println(result6) 
      }
output:
false
true
false
true
true
false

2.program:
package main
 import "fmt"
func main(){
var a int=20
var b int=30
if(a>b){
fmt.Println("Relational operators")
fmt.Println("a is greater than b")
}else{
fmt.Println("Relational operators")
fmt.Println("b is less than a")
}
}
output:
Relational operators
b is less than a

3.program:
package main
import "fmt"
func main() {
   var a int = 23
   var b int = 30
   if( a == b ) {
      fmt.Printf("Line 1 - a is equal to b\n" )
   } else {
      fmt.Printf("Line 1 - a is not equal to b\n" )
   }
   if ( a < b ) {
      fmt.Printf("Line 2 - a is less than b\n" )
   } else {
      fmt.Printf("Line 2 - a is not less than b\n" )
   } 
   if ( a > b ) {
      fmt.Printf("Line 3 - a is greater than b\n" )
   } else {
      fmt.Printf("Line 3 - a is not greater than b\n" )
   }
//change the values a anb b//
   a = 5
   b = 20
   if ( a <= b ) {
      fmt.Printf("Line 4 - a is either less than or equal to  b\n" )
   }
   if ( b >= a ) {
      fmt.Printf("Line 5 - b is either greater than  or equal to b\n" )
   }
}
output:
Line 1 - a is not equal to b
Line 2 - a is less than b
Line 3 - a is not greater than b
Line 4 - a is either less than or equal to  b
Line 5 - b is either greater than  or equal to b

3.Logical operators:
1.program:
package main 
import "fmt"
func main() { 
    var p int = 45
    var q int = 78
        
    if(p!=q && p<=q){  
        fmt.Println("True") 
    } 
        
    if(p!=q || p<=q){  
        fmt.Println("True") 
    } 
        
    if(!(p==q)){  
        fmt.Println("True") 
    } 
        
} 
output:
True
True
True

2.program:
package main
import "fmt"
func main() {
	var x, y, z = 20, 40, 50

	fmt.Println(x < y && x > z)
	fmt.Println(x < y || x > z)
	fmt.Println(!(x == y && x > z))
}
output:
false
true
true

3.program:
package main

import "fmt"

func main() {
   var a bool = true
   var b bool = false
   if ( a && b ) {
      fmt.Printf("Line 1 - Condition is true\n" )
   }
   if ( a || b ) {
      fmt.Printf("Line 2 - Condition is true\n" )
   }
   
   /* lets change the value of  a and b */
   a = false
   b = true
   if ( a && b ) {
      fmt.Printf("Line 3 - Condition is true\n" )
   } else {
      fmt.Printf("Line 3 - Condition is not true\n" )
   }
   if ( !(a && b) ) {
      fmt.Printf("Line 4 - Condition is true\n" )
   }
}
output:
Line 2 - Condition is true
Line 3 - Condition is not true
Line 4 - Condition is true

4.Assingment operators:
1.program:
package main 
    
import "fmt"
    
func main() { 
   var p int = 60
    var q int = 40
       
   // “=”(Simple Assignment) 
   p = q 
   fmt.Println(p) 
       
   // “+=”(Add Assignment) 
    p += q 
   fmt.Println(p) 
       
   //“-=”(Subtract Assignment) 
   p-=q 
   fmt.Println(p) 
       
   // “*=”(Multiply Assignment) 
   p*= q 
   fmt.Println(p) 
       
   // “/=”(Division Assignment) 
    p /= q 
   fmt.Println(p) 
      
    // “%=”(Modulus Assignment) 
    p %= q 
   fmt.Println(p) 
      
} 
output:
40
80
40
1600
40
0

2.program:
package main
import "fmt"
func main() {
   var a int = 12
   var c int
   c =  a
   fmt.Printf("Value of c = %d\n", c )

   c +=  a
   fmt.Printf(" Value of c = %d\n", c )

   c -=  a
   fmt.Printf(" Value of c = %d\n", c )

   c *=  a
   fmt.Printf(" Value of c = %d\n", c )

   c /=  a
   fmt.Printf(" Value of c = %d\n", c )

   c <<=  a
   fmt.Printf(" Value of c = %d\n", c )

   c >>=  a
   fmt.Printf("Value of c = %d\n", c )

   c &=  a
   fmt.Printf(" Value of c = %d\n", c )

   c ^=  a
   fmt.Printf(" Value of c = %d\n", c )

   c |=  a
   fmt.Printf(" Value of c = %d\n", c )
}
output:
Value of c = 12
 Value of c = 24
 Value of c = 12
 Value of c = 144
 Value of c = 12
 Value of c = 49152
Value of c = 12
 Value of c = 12
 Value of c = 0
 Value of c = 12

3.program:
package main
import "fmt"
func main() {
	var x, y = 15, 25
	x = y
	fmt.Println("= ", x)

	x = 15
	x += y
	fmt.Println("+=", x)

	x = 50
	x -= y
	fmt.Println("-=", x)

	x = 2
	x *= y
	fmt.Println("*=", x)

	x = 100
	x /= y
	fmt.Println("/=", x)

	x = 40
	x %= y
	fmt.Println("%=", x)
}
output:
=  25
+= 40
-= 25
*= 50
/= 4
%= 15

5.Bitwise operator:
1.program:
package main
import "fmt"
func main() {
	var x uint = 96
	var y uint = 56
	var z uint

	z = x & y
	fmt.Println("x & y  =", z)

	z = x | y
	fmt.Println("x | y  =", z)

	z = x ^ y
	fmt.Println("x ^ y  =", z)

	z = x << 1
	fmt.Println("x << 1 =", z)

	z = x >> 1
	fmt.Println("x >> 1 =", z)
}
output:
x & y  = 32
x | y  = 120
x ^ y  = 88
x << 1 = 192
x >> 1 = 48

2.program:
package main   
import "fmt"   
func main() { 
   p:= 44
   q:= 10
      
   result1:= p & q 
   fmt.Printf("Result of p & q = %d", result1)   
   
   result2:= p | q 
   fmt.Printf("\nResult of p | q = %d", result2) 
      
   result3:= p ^ q 
   fmt.Printf("\nResult of p ^ q = %d", result3)   
  
   result4:= p << 1
   fmt.Printf("\nResult of p << 1 = %d", result4) 
      
   result5:= p >> 1
   fmt.Printf("\nResult of p >> 1 = %d", result5)   
  
   result6:= p &^ q 
   fmt.Printf("\nResult of p &^ q = %d", result6) 
       
} 
output:
Result of p & q = 8
Result of p | q = 46
Result of p ^ q = 38
Result of p << 1 = 88
Result of p >> 1 = 22
Result of p &^ q = 36

3.program:
package main
import "fmt"
func main(){
var a,b,c int
a=20
b=30
c=a & b
fmt.Println(c)
c=a| b
fmt.Println(c)
c=a ^ b
fmt.Println(c)
c=a &^ b
fmt.Println(c)
}
output:
20
30
10
0

6.Miscellaneous Operator:
1.program:
package main     
import "fmt"
    
func main() { 
  a := 8   
  b := &a  
  fmt.Println(*b)  
  *b = 6 
  fmt.Println(a)  
} 
output:
8
6

2.program:
package main
import "fmt"
func main() {
   var a int = 8
   var b int64
   var c float32
   var ptr *int
   fmt.Printf("Line 1 - Type of variable a = %T\n", a );
   fmt.Printf("Line 2 - Type of variable b = %T\n", b );
   fmt.Printf("Line 3 - Type of variable c= %T\n", c );
   ptr = &a	/* 'ptr' now contains the address of 'a'*/
   fmt.Printf("value of a is  %d\n", a);
   fmt.Printf("*ptr is %d.\n", *ptr);

}
output:
Line 1 - Type of variable a = int
Line 2 - Type of variable b = int64
Line 3 - Type of variable c= float32
value of a is  8
*ptr is 8

3.program:
package main
import "fmt"
func main() {
    x := 5
    y := &x

    fmt.Println(*y)

    *y = 11
    fmt.Println(x)
}
output:
5
11

3.program


